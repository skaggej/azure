{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webCount": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Number of VMs to be deployed to the front end subnet."
            }
        },
        "sqlCount": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Number of VMs to be deployed to the back end subnet."
            }
        },
        "vnetName": {
            "defaultValue": "TestVNet",
            "type": "String",
            "metadata": {
                "description": "Name for the new VNet."
            }
        },
        "vnetPrefix": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "CIDR prefix for the VNet address space."
            }
        },
        "frontEndSubnetName": {
            "defaultValue": "FrontEnd",
            "type": "String",
            "metadata": {
                "description": "Name for the front end subnet."
            }
        },
        "frontEndSubnetPrefix": {
            "defaultValue": "192.168.1.0/24",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix for the front end subnet."
            }
        },
        "backEndSubnetName": {
            "defaultValue": "BackEnd",
            "type": "String",
            "metadata": {
                "description": "Name for the back end subnet."
            }
        },
        "backEndSubnetPrefix": {
            "defaultValue": "192.168.2.0/24",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix for the back end subnet."
            }
        },
        "stdStorageName": {
            "defaultValue": "skaggs70534hwnsgsstd02",
            "type": "String",
            "metadata": {
                "description": "Name for simple storage account."
            }
        },
        "stdStorageType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ],
            "type": "String"
        },
        "prmStorageName": {
            "defaultValue": "skaggs70534hwnsgsprm02",
            "type": "String",
            "metadata": {
                "description": "Name for simple storage account."
            }
        },
        "prmStorageType": {
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_GRS",
                "Premium_ZRS"
            ],
            "type": "String"
        }
    },
    "variables": {
        "webVMSettings": {
            "vmSize": "Standard_A1",
            "adminUsername": "adminuser",
            "adminPassword": "adminP@ssw0rd",
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest",
            "vmName": "Web",
            "osdisk": "osdiskweb",
            "nicName": "TestNICWeb",
            "pipName": "TestPIPWeb",
            "avsetName": "webAvSet"
        },
        "sqlVMSettings": {
            "vmSize": "Standard_DS1",
            "adminUsername": "adminuser",
            "adminPassword": "adminP@ssw0rd",
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP1-WS2012R2",
            "sku": "Standard",
            "version": "latest",
            "vmName": "SQL",
            "osdisk": "osdisksql",
            "datadisk": "datadisksql",
            "nicName": "TestNICSQL",
            "pipName": "TestPIPSQL",
            "avsetName": "sqlAvSet"
        },
        "location": "[resourceGroup().location]",
        "vmStorageAccountContainerName": "vhds",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
        "frontEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('frontEndSubnetName'))]",
        "backEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('backEndSubnetName'))]",
        "templateBaseUrl": "https://raw.githubusercontent.com/telmosampaio/azure-templates/master/201-IaaS-WebFrontEnd-SQLBackEnd/"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "storageTemplate",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/skaggej/azure/master/70534-NSGs/Storage.json",
                    "contentVersion": "1.0.0.0"
                },
                "parametersLink": {
                    "uri": "https://raw.githubusercontent.com/skaggej/azure/master/70534-NSGs/Storage-param.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "vnetTemplate",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templateBaseUrl'),'VNet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parametersLink": {
                    "uri": "[concat(variables('templateBaseUrl'),'VNet-param.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('webVMSettings').pipName, copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "webpipcount",
                "count": "[parameters('webCount')]"
            },
            "tags": {
                "displayName": "PublicIPAddresses - Web"
            },
            "properties": {
                "publicIPAllocationMethod": "dynamic"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('sqlVMSettings').pipName, copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "sqlpipcount",
                "count": "[parameters('sqlCount')]"
            },
            "tags": {
                "displayName": "PublicIPAddresses - SQL"
            },
            "properties": {
                "publicIPAllocationMethod": "dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('webVMSettings').nicName, copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "webniccount",
                "count": "[parameters('webCount')]"
            },
            "tags": {
                "displayName": "NetworkInterfaces - Web"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('webVMSettings').pipName, copyindex(1)))]"
                            },
                            "subnet": {
                                "id": "[variables('frontEndSubnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('webVMSettings').pipName, copyindex(1))]",
                "[concat('Microsoft.Resources/deployments/', 'vnetTemplate')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('sqlVMSettings').nicName, copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "webniccount",
                "count": "[parameters('sqlCount')]"
            },
            "tags": {
                "displayName": "NetworkInterfaces - SQL"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('sqlVMSettings').pipName, copyindex(1)))]"
                            },
                            "subnet": {
                                "id": "[variables('backEndSubnetRef')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('sqlVMSettings').pipName, copyindex(1))]",
                "[concat('Microsoft.Resources/deployments/', 'vnetTemplate')]"
            ]
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('webVMSettings').avsetName]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "AvailabilitySet - Web"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('sqlVMSettings').avsetName]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "AvailabilitySet - SQL"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "webvmcount",
                "count": "[parameters('webCount')]"
            },
            "tags": {
                "displayName": "VMs - Web"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('webVMSettings').avsetName)]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('webVMSettings').vmSize]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
                    "adminUsername": "[variables('webVMSettings').adminUsername]",
                    "adminPassword": "[variables('webVMSettings').adminPassword]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('webVMSettings').publisher]",
                        "offer": "[variables('webVMSettings').offer]",
                        "sku": "[variables('webVMSettings').sku]",
                        "version": "[variables('webVMSettings').version]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('webVMSettings').osdisk,copyindex(1))]",
                        "vhd": {
                            "uri": "[concat('http://', parameters('stdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('webVMSettings').osdisk, copyindex(1),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webVMSettings').nicName,copyindex(1)))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, copyindex(1))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('webVMSettings').avsetName)]",
                "[concat('Microsoft.Resources/deployments/', 'storageTemplate')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('sqlVMSettings').vmName,copyindex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "copy": {
                "name": "sqlvmcount",
                "count": "[parameters('sqlCount')]"
            },
            "tags": {
                "displayName": "VMs - SQL"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlVMSettings').avsetName)]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('sqlVMSettings').vmSize]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('sqlVMSettings').vmName,copyindex(1))]",
                    "adminUsername": "[variables('sqlVMSettings').adminUsername]",
                    "adminPassword": "[variables('sqlVMSettings').adminPassword]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('sqlVMSettings').publisher]",
                        "offer": "[variables('sqlVMSettings').offer]",
                        "sku": "[variables('sqlVMSettings').sku]",
                        "version": "[variables('sqlVMSettings').version]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('sqlVMSettings').osdisk,copyindex(1))]",
                        "vhd": {
                            "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').osdisk, copyindex(1),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').datadisk, copyindex(1),'-1','.vhd')]"
                            },
                            "name": "[concat(variables('sqlVMSettings').datadisk,copyindex(1),'-data-disk1')]",
                            "diskSizeGB": "127",
                            "createOption": "Empty",
                            "lun": 0
                        },
                        {
                            "vhd": {
                                "uri": "[concat('http://', parameters('prmStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('sqlVMSettings').datadisk, copyindex(1),'-2','.vhd')]"
                            },
                            "name": "[concat(variables('sqlVMSettings').datadisk,copyindex(1),'-data-disk2')]",
                            "diskSizeGB": "127",
                            "createOption": "Empty",
                            "lun": 1
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sqlVMSettings').nicName,copyindex(1)))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('sqlVMSettings').nicName, copyindex(1))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('sqlVMSettings').avsetName)]",
                "[concat('Microsoft.Resources/deployments/', 'storageTemplate')]"
            ]
        }
    ]
}